$(document).ready(function () {
    // Setup of the "backButton" in the header.
    $('#backButton').click(async function () {
        if (saveData()) {
            let searchParams = new URLSearchParams(window.location.search);
            let mapUUID = searchParams.get("mapUUID");
            window.location.href = "/public/forms/map/map.php?serviceUUID=" + mapUUID;
        }
    });

    let layerTableBuilder = new TableBuilder($('#classTable'), '#classTable');
    $('#classCreatorButton').click(function () {
        layerTableBuilder.addNewLayer($('#className').val());
    });


    addEventListener('beforeunload', (event) => {
        if (!saveData()) {
            event.preventDefault();
            return event.returnValue = "Ihre Eingaben sind nicht valide und werden daher nicht automatisch gespeichert."
        };
    })
});

/**
 * Attempts to save the form data.
 * @returns {boolean} if the form data is in a valid state
 */
function saveData() {
    let searchParams = new URLSearchParams(window.location.search);
    let serviceUUID = searchParams.get('mapUUID');
    let submitter = new FormSubmitter();
    return submitter.attemptSubmitFormData(serviceUUID, 'layer', 'layerForm', "updateHandler.php", formSubmitterWrapper);
}

function formSubmitterWrapper(json) {
    json = provideContext(json);
    return parseStyle(json);
}

function provideContext(json) {
    let searchParams = new URLSearchParams(window.location.search);
    let layerID = searchParams.get('rowNumber');
    let outher = {}
    outher.layerIndex = layerID;
    return {...outher, ...json};
}

/**
 * Parses all style classes from the form and returns them as a json.
 * This is a special case function from the FormSubmitter.
 * @param json the autogenerated json
 * @returns {*} the json with the layers
 */
function parseStyle(json) {
    let table = $('#layerTable td');
    let layers = {};
    let layerIndex = 0;
    for (let i = 0; i < table.length; i++) {
        if (i % 2 === 0) {
            layers[layerIndex] = {name: table[i].textContent};
            layerIndex++;
        }
    }
    json['styleClasses'] = layers;
    return json;
}

/**
 * Gets called by map.php with the data of the ogc service as a json.
 * @param ogcServiceData the data of the ogc service as a json
 */
function phpHook(ogcServiceData) {
    $(document).ready(function () {
        console.log(ogcServiceData["layer"]);
        new FormFiller().fillForms(ogcServiceData);
    });
}
